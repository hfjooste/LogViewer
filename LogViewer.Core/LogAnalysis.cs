namespace LogViewer.Core;

/// <summary>
/// The final analysis generated by the analyzer
/// </summary>
public class LogAnalysis
{
    /// <summary>
    /// The first timestamp detected in the log file
    /// </summary>
    public string TimestampStart { get; init; } = string.Empty;
        
    /// <summary>
    /// The last timestamp detected in the log file
    /// </summary>
    public string TimestampEnd { get; init; } = string.Empty;
        
    /// <summary>
    /// The application version extracted from the log file
    /// </summary>
    public string Version { get; init; } = string.Empty;
        
    /// <summary>
    /// Extracts from when the application was closed
    /// </summary>
    public LogExtract[] Closed { get; init; } = Array.Empty<LogExtract>();
        
    /// <summary>
    /// Extracts from when the application was restarted (or opened)
    /// </summary>
    public LogExtract[] Restarts { get; init; } = Array.Empty<LogExtract>();
        
    /// <summary>
    /// Extracts for every exceptions that was detected in the log file
    /// </summary>
    public LogExtract[] Exceptions { get; init; } = Array.Empty<LogExtract>();
        
    /// <summary>
    /// Extracts for every crash that was detected in the log file
    /// </summary>
    public LogExtract[] Crashes { get; init; } = Array.Empty<LogExtract>();
        
    /// <summary>
    /// Custom extracts from the log file
    /// </summary>
    public LogAnalysisExtract[] Extract { get; init; } = Array.Empty<LogAnalysisExtract>();
        
    /// <summary>
    /// Custom count results from the log file
    /// </summary>
    public LogAnalysisCount[] Count { get; init; } = Array.Empty<LogAnalysisCount>();
}
    
/// <summary>
/// An extract from the log file
/// </summary>
public class LogExtract
{
    /// <summary>
    /// The timestamp of the extract
    /// </summary>
    public string Timestamp { get; set; } = string.Empty;
        
    /// <summary>
    /// The actual text that was extracted from the log file
    /// </summary>
    public string Details { get; set; } = string.Empty;
}
    
/// <summary>
/// Custom value that was extracted from the log file
/// </summary>
public class LogAnalysisExtract
{
    /// <summary>
    /// A user friendly display name
    /// </summary>
    public string Name { get; init; } = string.Empty;
        
    /// <summary>
    /// The value extracted from the log file
    /// </summary>
    public string Value { get; init; } = string.Empty;
}

/// <summary>
/// Custom count result
/// </summary>
public class LogAnalysisCount
{
    /// <summary>
    /// A user friendly display name
    /// </summary>
    public string Name { get; init; } = string.Empty;
        
    /// <summary>
    /// The amount of occurrences found in the log file
    /// </summary>
    public int Amount { get; init; }
}